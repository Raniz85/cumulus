{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Foundation VPC stack across two availability zones",
  "Parameters": {
    "ParamCIDRBlock": {
      "Description": "The CIDR block for the VPC ( format X.X.X.X/X )",
      "Type": "String",
	  "AllowedPattern": "([0-9]{1,3}\\.){3}[0-9]{1,3}\/[0-9]{1,2}",
	  "ConstraintDescription": "Parameter CIDRBlock must be a valid CIDR expression."
    },
    "ParamAvailabilityZone1": {
      "Description": "Left-Side Availability Zone, must exist in your AWS region",
      "Type": "String",
      "AllowedPattern": "[a-z][a-z]-[a-z]+-[0-9][a-z]",
      "ConstraintDescription": "Must select a valid AZ name within the target region"
    },
    "ParamAvailabilityZone2": {
      "Description": "Right-Side Availability Zone,  must exist in your AWS region",
      "Type": "String",
      "AllowedPattern": "[a-z][a-z]-[a-z]+-[0-9][a-z]",
      "ConstraintDescription": "must select a valid AZ name within the target region"
    },
    "ParamGlobalRSAKey": {
      "Description": "A global EC2 key pair",
      "Type": "AWS::EC2::KeyPair::KeyName"
    }
  },
  "Resources": {
    "StandardInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
        ]
      }
    },
    "StandardInstanceRoleProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          { "Ref": "StandardInstanceRole" }
        ]
      }
    },
    "BaseAccessPolicy" : {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName" : "Base_access_policy_for_all_instances",
        "Roles": [ { "Ref" : "StandardInstanceRole" } ],
        "PolicyDocument" : {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeTags"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Ref" : "ParamCIDRBlock" },
        "Tags": [
          {
            "Key": "left-az",
            "Value": {
              "Ref": "ParamAvailabilityZone1"
            }
          },
          {
            "Key": "right-az",
            "Value": {
              "Ref": "ParamAvailabilityZone2"
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": "InternetGateway",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "PublicRouteTable",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "InternalRouteTable1": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn" : "VPC",
      "Properties": {
        "VpcId": { "Ref": "VPC" }
      }
    },
    "InternalRouteTable2": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn" : "VPC",
      "Properties": {
        "VpcId": { "Ref": "VPC" }
      }
    },
    "SGManagementSource": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn" : "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Source Security Group for Management Activities"
      }
    },
    "SGBaseManagement": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn" : "VPC",
      "Properties": {
        "GroupDescription": "Base Security Group for Management / Monitoring access",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "SourceSecurityGroupId": {
              "Ref": "SGManagementSource"
            },
            "FromPort": "0",
            "ToPort": "65535"
          }
        ]
      }
    }
  }
}
